# KitFox.sk
# 依赖:
# Skript 2.4.0 *
# MCQQbot 1.0.4 *
# skript-yaml 1.3.2*
# skript-reflect 2.1.0 * 
# skript-placeholders 1.5 *
# AuthMe 5.6.0-SNAPSHOT *
# Maintenance
#
# 本skript由SwallowMC团队编写并由SinanGentoo主要维护；
# 如果你在使用本脚本时遇到了问题，请联系我们或者在我们的Github
# 仓库里提issue！（当然，我们更喜欢Pull request XD）
# --------------------------------------------

import: # 需要引用的java类
  java.lang.String as JavaString
  org.bukkit.entity.Player
  org.bukkit.advancement.Advancement
  org.bukkit.event.player.PlayerAdvancementDoneEvent
  fr.xephi.authme.api.v3.AuthMeApi
  
function createConfig():
  set {_configPath} to "plugins/KitFox/config.yml"
  set {_example::Example} to 114514
  set {_example::anotherExample} to 1919810
  load yml {_configPath} as {_configPath}
  
  set yml value "chat-forward" from {_configPath} to true
  set yml value "op-vanish" from {_configPath} to true
  set yml value "silent-mode" from {_configPath} to false
  set yml value "main-group" from {_configPath} to 12306
  set yml list "enabled-groups" from {_configPath} to {_example::*}
  set yml list "admin" from {_configPath} to {_example::*}
  set yml list "helper" from {_configPath} to {_example::*}
  
  save yml {_configPath}
  unload yml {_configPath}

function getConfigValue(name: text) :: text:
  set {_configPath} to "plugins/KitFox/config.yml"
  load yml {_configPath} as {_configPath}
  set {_result} to yml value {_name} from {_configPath}
  unload yml {_configPath}
  return "%{_result}%"
  
function sendMessage(type: text ,id: text ,message: text):
  command "/mcqqbot send %{_type}% %{_id}% %{_message}%" by console

function checkPermission(code: text ,type: text) :: boolean:
  set {_configPath} to "plugins/KitFox/config.yml"
  load yml {_configPath} as {_configPath}
  set {_template::*} to yml list {_type} from {_configPath}
  loop {_template::*}:
    if {_code} is "%loop-value%":
      return true
  unload yml {_configPath}
  return false

function parseArg(fullcmd: text ,argpos: integer) :: text:
  set {_subtext} to {_fullcmd} 
  loop {_argpos} times: # locate the argument's position
    set {_tpos} to index of " " in {_subtext}
    set {_subtext} to subtext of {_subtext} from characters {_tpos}+1 to the length of {_subtext}
  set {_endpos} to index of " " in {_subtext} # locate the argument's position
  if {_endpos} is -1: # It's end of the full command?
    set {_arg} to {_subtext}
  else:
    set {_arg} to subtext of {_subtext} from characters 0 to {_endpos}-1
  return {_arg}

function countArg(fullcmd: text) :: number:
  set {_subtext} to {_fullcmd}
  set {_count} to 0
  loop length of {_subtext} times: # count
    set {_tpos} to index of " " in {_subtext}
    if {_tpos} is -1:
      stop
    else:
      set {_count} to {_count}+1
      set {_subtext} to subtext of {_subtext} from characters {_tpos}+1 to the length of {_subtext}
  return {_count}
  
# --------------------------------------------

# 当脚本被启动时
on load:
  message "[KitFox] 南狐(版本：1.0-BETA2)启动中……" to console
  set {_configPath} to "plugins/KitFox/config.yml"
  if yml file {_configPath} exists: # 检测配置文件是否存在
    message "[KitFox] 配置文件加载成功！" to console
  else:
    message "[KitFox] 没有找到配置文件呢…不过南狐会帮你创建一个哒！" to console
    createConfig()
  load yml {_configPath} as {_configPath}
  set {_admin::*} to yml list "admin" from {_configPath}
  loop {_admin::*}:
    sendMessage("friend","%loop-value%","南狐 已苏醒")
  unload yml {_configPath}
  
# 当脚本被关闭时  
on unload:
  message "[KitFox] 南狐 关闭中……" to console
  
# 当服务器启动完成时  
on server start:
  set {_groupid} to getConfigValue("main-group")
  sendMessage("group","%{_groupid}%","KittenCraft 已苏醒")

# 当服务器关闭时
on server stop:
  set {_groupid} to getConfigValue("main-group")
  sendMessage("group","%{_groupid}%","KittenCraft 麻了")  

# 当机器人收到消息时(命令执行部分)
on bot message:
  if checkPermission(group-code,"enabled-groups") is true: # 群聊隔离
    if bot message is "给我变":
      if checkPermission(qq,"admin") is true: # 权限检测
        bot reply "这就变"
        command "/skript reload KitFox.sk" by console
      else:
        bot reply "你说变就变，本南狐岂不是很没有面子？"
      
# 当机器人收到消息时（群聊消息转发部分）
on bot message:
  set {_groupid} to getConfigValue("main-group") # 读取主群群号
  set {_cf} to getConfigValue("chat-forward")
  
  if group-code is "%{_groupid}%":
    if {_cf} is "true":
      broadcast "[群聊]<%sender%> %bot message%"
      
# 当服务器内玩家发消息时      
on chat:
  set {_groupid} to getConfigValue("main-group")
  set {_cf} to getConfigValue("chat-forward")
  if {_cf} is "true":
    sendMessage("group","%{_groupid}%","[KittenCraft]%player's name%: %message%")
      
