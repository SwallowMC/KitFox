KitFox.sk
# 依赖:
# Skript 2.4.0 
# MCQQbot 2.0 
# skript-yaml 1.3.2
# skript-reflect 2.1.0 *
#
# 本skript由SwallowMC团队编写并由SinanGentoo主要维护；
# 如果你在使用本脚本时遇到了问题，请联系我们或者在我们的Github
# 仓库里发issue或pr！
# PS：如需该脚本支持更多功能，欢迎在我们的官方仓库里下载！
# --------------------------------------------

options:
  version: 2.0
  config-version: 3
  
import:
  org.bukkit.Bukkit
  ch.njol.skript.Skript
  java.lang.Runnable

function FOX_executeMethod(functionName: text):
  set {_functions::run} to function reference {_functionName}
  set {_proxy} to new proxy instance of Runnable using {_functions::*}
  {_proxy}.run()
  
function FOX_createConfig():
  set {_configPath} to "plugins/KitFox/config.yml" # 配置路径
  set {_example::Example} to 114514
  set {_example::anotherExample} to 1919810
  load yml {_configPath} as {_configPath}
  
  set yml value "config-version" from {_configPath} to {@config-version}
  set the comments of yaml node "config-version" from {_configPath} to "请不要修改！"
  set yml value "chat-forward" from {_configPath} to true
  set the comments of yaml node "chat-forward" from {_configPath} to "选择是否要开启聊天转发"
  set yml value "op-vanish" from {_configPath} to true
  set the comments of yaml node "op-vanish" from {_configPath} to "是否不提示管理员在线" and "使用此项时请确保聊天转发已经开启！" 
  set yml value "silent-mode" from {_configPath} to false
  set yml value "main-group" from {_configPath} to 12306
  set the comments of yaml node "main-group" from {_configPath} to "机器人的主要工作群聊（群聊转发，广播等）"
  set yml value "command-prefix" from {_configPath} to "!fox"
  set the comments of yaml node "command-prefix" from {_configPath} to "机器人命令前缀（不可有空格）"
  set yml value "remote-secret" from {_configPath} to "!fox"
  set the comments of yaml node "remote-secret" from {_configPath} to "用于远程控制服务器，需要MCSM面板的支持"
  set yml list "enabled-groups" from {_configPath} to {_example::*}
  set the comments of yaml node "enabled-groups" from {_configPath} to "哪些群可以执行机器人命令"
  set yml list "admin" from {_configPath} to {_example::*}
  set the comments of yaml node "admin" from {_configPath} to "哪些QQ用户能执行管理员命令"
  set yml list "helper" from {_configPath} to {_example::*}
  set the comments of yaml node "helper" from {_configPath} to "哪些QQ用户能执行协助者命令"
  
  save yml {_configPath}
  unload yml {_configPath}
  
function FOX_getConfigValue(name: text) :: text:
  set {_configPath} to "plugins/KitFox/config.yml"
  if yml file {_configPath} exists:
    load yml {_configPath} as {_configPath}
    set {_result} to yml value {_name} from {_configPath}
    unload yml {_configPath}
    return "%{_result}%"
  else:
    message "[KitFox] 没有找到配置文件呢…不过南狐会帮你创建一个哒！" to console
    createConfig()
    return "null"

function FOX_getConfigList(name: text) :: objects:
  set {_configPath} to "plugins/KitFox/config.yml"
  if yml file {_configPath} exists:
    load yml {_configPath} as {_configPath}
    set {_result::*} to yml list {_name} from {_configPath}
    unload yml {_configPath}
    return {_result::*}
  else:
    message "[KitFox] 没有找到配置文件呢…不过南狐会帮你创建一个哒！" to console
    createConfig()
    set {_result::1} to "null"
    return {_result::*}

function FOX_sendMessage(id: text ,message: text):
  send {_message} to {_id}

# --------------------------------------------
on load:
  if "{@version}" is not "%{lastVersion}%":
    set {buildTimes} to 1
  message "[KitFox] 南狐(版本：{@version}-build%{buildTimes}%)启动中……" to console
  set {_configPath} to "plugins/KitFox/config.yml"
  if yml file {_configPath} exists: # 检测配置文件是否存在
    message "[KitFox] 配置文件加载成功！" to console
  else:
    message "[KitFox] 没有找到配置文件呢…不过南狐会帮你创建一个哒！" to console
    createConfig()
  if getConfigValue("config-version") is not "{@config-version}":
    message "[KitFox] 哎呀……这个配置文件发霉了……或许你应该重新生成一下？" to console
  set {FOX_Operator::*} to getConfigList("admin")
  loop {FOX_Operator::*}:
    sendMessage("friend","%loop-value%","南狐 已苏醒")